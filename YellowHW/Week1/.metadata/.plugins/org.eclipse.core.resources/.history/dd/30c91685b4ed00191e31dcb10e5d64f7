#include <iostream>
#include <map>
#include <vector>
#include <sstream>
#include <utility>
using namespace std;


// Предварительное объявление шаблонных функций
template<typename T> T FuncA(T x);
template<typename T> void FuncB(T x);

// Объявляем шаблонные функции
template <typename T>
T FuncA(T x) { /*...*/ }

template <typename T>
void FuncB(T x) { /*...*/ }

template <typename T>
vector<T> Sqr(vector<T> X) {
	for (auto& x : X) {
		x *= x;
	}
	return X;
}
template <typename T>
T Sqr(T x) {
	return x * x;
}

int main() {
	cout << Sqr(2.5) << endl;
	vector<int> v;
	v = {1, 2, 3};
	cout << "vector:";
	for (int x : Sqr(v)) {
		cout << ' ' << x;
	}
	cout << endl;
	auto x = Sqr(map_of_pairs);

	/*
	// Пример вызова функции
	vector<int> v;
	v = {1, 2, 3};
	cout << "vector:";
	for (int x : Sqr(v)) {
	  cout << ' ' << x;
	}
	cout << endl;

	map<int, pair<int, int>> map_of_pairs;
	map_of_pairs = {
	  {4, {2, 2}},
	  {7, {4, 3}}
	};
	cout << "map of pairs:" << endl;
	for (const auto& x : Sqr(map_of_pairs)) {
	  cout << x.first << ' ' << x.second.first << ' ' << x.second.second << endl;
	}	return 0;
	*/
}
